2022-02-09 13:00:12,114	CRITICAL	Logging Started, level=10
2022-02-09 13:00:12,117	DEBUG	DataLogger[0x00000172A95BA5E0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:00:12,118	INFO	Dash is running on http://127.0.0.1:8050/

2022-02-09 13:00:12,121	ERROR	DataLogger[0x00000172A95BA5E0](DN=True,EC=0,TO=5,BK=False,LC=-1,LI=1) In _loop: expected str, bytes or os.PathLike object, not NoneType
2022-02-09 13:00:12,176	DEBUG	['  File "Z:\\Projects\\WebSite\\worker.py", line 85, in _loop\n    self.Execute()\n', '  File "Z:\\Projects\\WebSite\\DataLogger.py", line 61, in Execute\n    dpath=os.path.join(self.data_root,str(now.year),str(now.month),str(now.day))\n', '  File "C:\\Users\\jmoon\\Anaconda3\\lib\\ntpath.py", line 78, in join\n    path = os.fspath(path)\n']
2022-02-09 13:00:16,143	CRITICAL	Logging Started, level=10
2022-02-09 13:00:16,146	DEBUG	DataLogger[0x000001E4A5CE5BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:00:16,149	ERROR	DataLogger[0x000001E4A5CE5BE0](DN=True,EC=0,TO=5,BK=False,LC=-1,LI=1) In _loop: expected str, bytes or os.PathLike object, not NoneType
2022-02-09 13:00:16,170	DEBUG	['  File "Z:\\Projects\\WebSite\\worker.py", line 85, in _loop\n    self.Execute()\n', '  File "Z:\\Projects\\WebSite\\DataLogger.py", line 61, in Execute\n    dpath=os.path.join(self.data_root,str(now.year),str(now.month),str(now.day))\n', '  File "C:\\Users\\jmoon\\Anaconda3\\lib\\ntpath.py", line 78, in join\n    path = os.fspath(path)\n']
2022-02-09 13:03:04,278	CRITICAL	Logging Started, level=10
2022-02-09 13:03:04,290	DEBUG	DataLogger[0x0000028B264285E0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:03:04,292	INFO	Dash is running on http://127.0.0.1:8050/

2022-02-09 13:03:08,063	CRITICAL	Logging Started, level=10
2022-02-09 13:03:08,066	DEBUG	DataLogger[0x0000020724AF5BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:10:23,054	CRITICAL	Logging Started, level=10
2022-02-09 13:10:23,057	DEBUG	DataLogger[0x000001C79B885C10](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:10:23,058	INFO	Dash is running on http://127.0.0.1:8050/

2022-02-09 13:10:26,717	CRITICAL	Logging Started, level=10
2022-02-09 13:10:26,720	DEBUG	DataLogger[0x0000022136975BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:10:59,285	CRITICAL	Logging Started, level=10
2022-02-09 13:10:59,288	DEBUG	DataLogger[0x00000299FB885BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:13:55,252	CRITICAL	Logging Started, level=10
2022-02-09 13:13:55,255	DEBUG	DataLogger[0x00000189F98C6BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:16:05,066	CRITICAL	Logging Started, level=10
2022-02-09 13:16:05,070	DEBUG	DataLogger[0x0000019CB1DD6BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:20:00,638	CRITICAL	Logging Started, level=10
2022-02-09 13:20:00,641	DEBUG	DataLogger[0x0000024B82B66BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:22:56,581	CRITICAL	Logging Started, level=10
2022-02-09 13:22:56,588	DEBUG	DataLogger[0x0000020D8B0A6BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:33:06,778	CRITICAL	Logging Started, level=10
2022-02-09 13:33:06,782	DEBUG	DataLogger[0x000001EDF2EF6BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:33:30,433	CRITICAL	Logging Started, level=10
2022-02-09 13:33:30,436	DEBUG	DataLogger[0x00000257DEEB6BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:33:53,517	CRITICAL	Logging Started, level=10
2022-02-09 13:33:53,520	DEBUG	DataLogger[0x0000018BBFAF6BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:34:09,569	CRITICAL	Logging Started, level=10
2022-02-09 13:34:09,571	DEBUG	DataLogger[0x00000157B5976BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:35:17,367	CRITICAL	Logging Started, level=10
2022-02-09 13:35:17,370	DEBUG	DataLogger[0x0000018CD6F76C10](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:35:29,902	CRITICAL	Logging Started, level=10
2022-02-09 13:35:29,906	DEBUG	DataLogger[0x00000145438E6BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:36:14,529	CRITICAL	Logging Started, level=10
2022-02-09 13:36:14,533	DEBUG	DataLogger[0x000001C489E76BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:37:37,855	CRITICAL	Logging Started, level=10
2022-02-09 13:37:37,859	DEBUG	DataLogger[0x000001ED14C56BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:38:49,705	CRITICAL	Logging Started, level=10
2022-02-09 13:38:49,708	DEBUG	DataLogger[0x000001E679226BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:39:21,082	CRITICAL	Logging Started, level=10
2022-02-09 13:39:21,085	DEBUG	DataLogger[0x0000019A20276BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:40:48,206	CRITICAL	Logging Started, level=10
2022-02-09 13:40:48,213	DEBUG	DataLogger[0x0000016B56776BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:53:20,011	CRITICAL	Logging Started, level=10
2022-02-09 13:53:20,016	DEBUG	DataLogger[0x000002A25AE26BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:54:16,791	CRITICAL	Logging Started, level=10
2022-02-09 13:54:16,797	DEBUG	DataLogger[0x000002B0E4586BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:56:33,212	CRITICAL	Logging Started, level=10
2022-02-09 13:56:33,218	DEBUG	DataLogger[0x000001EC4EA36C10](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 13:56:33,219	INFO	Dash is running on http://127.0.0.1:8050/

2022-02-09 13:56:37,236	CRITICAL	Logging Started, level=10
2022-02-09 13:56:37,242	DEBUG	DataLogger[0x0000019A493E6BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 14:57:32,260	CRITICAL	Logging Started, level=10
2022-02-09 14:57:32,260	DEBUG	DataLogger[0x000001286D196BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 15:02:13,282	CRITICAL	Logging Started, level=10
2022-02-09 15:02:13,282	DEBUG	DataLogger[0x000001F254EE6C10](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 15:02:13,282	INFO	Dash is running on http://127.0.0.1:8050/

2022-02-09 15:02:16,973	CRITICAL	Logging Started, level=10
2022-02-09 15:02:16,973	DEBUG	DataLogger[0x00000294A83D6BE0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 18:33:16,210	CRITICAL	Logging Started, level=10
2022-02-09 18:33:16,211	DEBUG	DataLogger[0x000001CDE9D862E0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 18:33:16,213	INFO	Dash is running on http://127.0.0.1:8050/

2022-02-09 18:33:18,518	CRITICAL	Logging Started, level=10
2022-02-09 18:33:18,519	DEBUG	DataLogger[0x00000186336942E0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 21:00:32,672	CRITICAL	Logging Started, level=10
2022-02-09 21:00:32,672	DEBUG	DataLogger[0x0000012262B172E0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 21:00:32,672	INFO	Dash is running on http://127.0.0.1:8050/

2022-02-09 21:00:35,254	CRITICAL	Logging Started, level=10
2022-02-09 21:00:35,254	DEBUG	DataLogger[0x00000279DB3442E0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-09 21:01:33,941	DEBUG	Writing 1 data pairs to utc_data\2022\2\10\blah.dat
2022-02-09 21:01:33,941	ERROR	DataLogger[0x00000279DB3442E0](DN=True,EC=0,TO=5,BK=False,LC=-1,LI=1) In _loop: name 'data_cache' is not defined
2022-02-09 21:01:33,973	DEBUG	['  File "Z:\\Projects\\WebSite\\worker.py", line 85, in _loop\n    self.Execute()\n', '  File "Z:\\Projects\\WebSite\\DataLogger.py", line 95, in Execute\n    if not origin_name in data_cache:\n']
2022-02-10 06:37:06,712	CRITICAL	Logging Started, level=10
2022-02-10 06:37:06,728	DEBUG	DataLogger[0x000001BCAAEEBA90](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 06:37:06,728	ERROR	DataLogger[0x000001BCAAEEBA90](DN=True,EC=0,TO=5,BK=False,LC=-1,LI=1) In _loop: expected str, bytes or os.PathLike object, not NoneType
2022-02-10 06:37:06,781	DEBUG	['  File "Z:\\Projects\\WebSite\\worker.py", line 85, in _loop\n    self.Execute()\n', '  File "Z:\\Projects\\WebSite\\DataLogger.py", line 70, in Execute\n    dpath=os.path.join(self.data_root,str(now.year),str(now.month),str(now.day))\n', '  File "C:\\Users\\jmoon\\Anaconda3\\lib\\ntpath.py", line 78, in join\n    path = os.fspath(path)\n']
2022-02-10 06:44:19,846	CRITICAL	Logging Started, level=10
2022-02-10 06:44:19,846	DEBUG	DataLogger[0x000002345EFAA910](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 06:44:19,846	ERROR	DataLogger[0x000002345EFAA910](DN=True,EC=0,TO=5,BK=False,LC=-1,LI=1) In _loop: expected str, bytes or os.PathLike object, not NoneType
2022-02-10 06:44:19,930	DEBUG	['  File "Z:\\Projects\\WebSite\\worker.py", line 85, in _loop\n    self.Execute()\n', '  File "Z:\\Projects\\WebSite\\DataLogger.py", line 70, in Execute\n    dpath=os.path.join(self.data_root,str(now.year),str(now.month),str(now.day))\n', '  File "C:\\Users\\jmoon\\Anaconda3\\lib\\ntpath.py", line 78, in join\n    path = os.fspath(path)\n']
2022-02-10 06:47:39,935	CRITICAL	Logging Started, level=10
2022-02-10 06:47:39,935	DEBUG	DataLogger[0x000001843657AA90](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 06:50:05,321	CRITICAL	Logging Started, level=10
2022-02-10 06:50:05,321	DEBUG	DataLogger[0x0000019E43F9B700](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 06:50:23,906	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 06:51:31,725	CRITICAL	Logging Started, level=10
2022-02-10 06:51:31,725	DEBUG	DataLogger[0x000001E77999BFA0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 06:51:36,255	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 06:52:09,152	DEBUG	DataReader Read datac\2022\2\9\wind_angle.dat
2022-02-10 06:52:27,563	DEBUG	CONFIGDIR=C:\Users\jmoon\.matplotlib
2022-02-10 06:52:27,563	DEBUG	(private) matplotlib data path: C:\Users\jmoon\Anaconda3\lib\site-packages\matplotlib\mpl-data
2022-02-10 06:52:27,579	DEBUG	matplotlib data path: C:\Users\jmoon\Anaconda3\lib\site-packages\matplotlib\mpl-data
2022-02-10 06:52:27,579	DEBUG	loaded rc file C:\Users\jmoon\Anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2022-02-10 06:52:27,585	DEBUG	matplotlib version 3.2.2
2022-02-10 06:52:27,585	DEBUG	interactive is False
2022-02-10 06:52:27,585	DEBUG	platform is win32
2022-02-10 06:52:27,585	DEBUG	loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '__future__', 'pyreadline.py3k_compat', 'pyreadline.unicode_helper', '_socket', 'collections.abc', 'math', 'select', 'selectors', 'enum', 'errno', 'socket', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'linecache', 'traceback', '_weakrefset', 'weakref', '_string', 'string', 'threading', 'atexit', 'logging', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', '_queue', 'queue', 'copy', 'logging.handlers', 'pyreadline.logger', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'pyreadline.keysyms.winconstants', 'pyreadline.keysyms.common', 'pyreadline.keysyms.keysyms', 'pyreadline.keysyms', 'pyreadline.clipboard.win32_clipboard', 'pyreadline.clipboard', 'pyreadline.lineeditor', 'pyreadline.lineeditor.wordmatcher', 'pyreadline.lineeditor.lineobj', 'pyreadline.lineeditor.history', 'posixpath', 'fnmatch', 'glob', 'pyreadline.error', 'pyreadline.modes.basemode', 'pyreadline.modes.emacs', 'pyreadline.modes.notemacs', 'pyreadline.modes.vi', 'pyreadline.modes', 'pyreadline.console.ansi', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'signal', 'msvcrt', '_winapi', 'subprocess', 'ctypes.util', 'pyreadline.console.event', 'pyreadline.console.console', 'pyreadline.console', 'pyreadline.release', 'pyreadline.rlmain', 'pyreadline', 'readline', 'rlcompleter', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'mkl._mklinit', 'cython_runtime', 'six', 'mkl._py_mkl_service', 'mkl', 'numpy._distributor_init', 'textwrap', '_datetime', 'datetime', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'urllib', 'urllib.parse', 'pathlib', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._dtype_ctypes', 'platform', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', '_ast', 'ast', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', '_decimal', 'decimal', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_20', 'numpy.random._common', 'binascii', 'base64', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', '_bisect', 'bisect', '_sha512', '_random', 'random', 'secrets', 'numpy.random._bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'dateutil._version', 'dateutil', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.numpy', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.tslibs.nattype', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'locale', 'typing.io', 'typing.re', 'typing', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'calendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.ccalendar', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.frequencies', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs', 'pandas._libs', 'pandas._libs.hashtable', 'fractions', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.dtypes', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._typing', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.dtypes.missing', '_opcode', 'opcode', 'dis', 'inspect', 'pandas._libs.properties', 'pandas.util._decorators', 'pandas.core.util', 'pandas._libs.hashing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.util.hashing', 'pandas.util', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas._libs.ops', 'pandas.core.ops.roperator', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck.benchmark', 'gc', 'timeit', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck._pytesttester', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'dateutil.easter', 'pandas.tseries.offsets', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.datetimes', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.io.formats.printing', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.core.indexes.datetimes', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.blocks', 'pandas.core.internals.concat', 'pandas.core.internals.managers', 'pandas.core.internals', 'unicodedata', 'gzip', 'mmap', 'zipfile', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.generic', 'pandas.core.internals.construction', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.groupby.base', 'pandas.core.window.common', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.series', 'pandas.core.frame', 'pandas._libs.groupby', 'pandas._libs.reduction', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pprint', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.engines', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.util', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', '_csv', 'csv', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.api', 'pandas.util._tester', 'tempfile', 'pandas._libs.testing', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'worker', '_ssl', 'ssl', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'http', 'email', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.connection', '_cffi_backend', '_brotli.lib', '_brotli', 'brotli._brotli', 'brotli.brotli', 'brotli', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.url', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3.util', 'urllib3._collections', 'urllib3.connection', 'mimetypes', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'chardet.compat', 'chardet.enums', 'chardet.charsetprober', 'chardet.charsetgroupprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.escprober', 'chardet.latin1prober', 'chardet.mbcssm', 'chardet.utf8prober', 'chardet.mbcharsetprober', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.chardistribution', 'chardet.jpcntx', 'chardet.sjisprober', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.mbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.sbcsgroupprober', 'chardet.universaldetector', 'chardet.version', 'chardet', 'requests.exceptions', 'requests.__version__', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'http.cookies', 'requests.compat', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'requests.utils', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet.compat', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.escprober', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.version', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'DataLogger', 'data', 'matplotlib', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-02-10 06:52:27,664	DEBUG	CACHEDIR=C:\Users\jmoon\.matplotlib
2022-02-10 06:52:27,679	DEBUG	Using fontManager instance from C:\Users\jmoon\.matplotlib\fontlist-v310.json
2022-02-10 06:52:28,002	DEBUG	Loaded backend qt5agg version unknown.
2022-02-10 06:52:28,218	DEBUG	Loaded backend qt5agg version unknown.
2022-02-10 06:52:28,218	DEBUG	Loaded backend Qt5Agg version unknown.
2022-02-10 06:52:50,486	DEBUG	findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-02-10 06:52:50,486	DEBUG	findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2022-02-10 06:52:50,486	DEBUG	findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-02-10 06:52:50,500	DEBUG	findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,500	DEBUG	findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2022-02-10 06:52:50,500	DEBUG	findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,500	DEBUG	findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,500	DEBUG	findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2022-02-10 06:52:50,516	DEBUG	findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2022-02-10 06:52:50,516	DEBUG	findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,516	DEBUG	findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-02-10 06:52:50,516	DEBUG	findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,516	DEBUG	findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,532	DEBUG	findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,532	DEBUG	findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,532	DEBUG	findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-02-10 06:52:50,532	DEBUG	findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,532	DEBUG	findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-02-10 06:52:50,532	DEBUG	findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,547	DEBUG	findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2022-02-10 06:52:50,547	DEBUG	findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,547	DEBUG	findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:50,547	DEBUG	findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:50,547	DEBUG	findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,563	DEBUG	findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-02-10 06:52:50,563	DEBUG	findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,563	DEBUG	findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,563	DEBUG	findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2022-02-10 06:52:50,563	DEBUG	findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:50,578	DEBUG	findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,578	DEBUG	findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,578	DEBUG	findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,578	DEBUG	findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:50,578	DEBUG	findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,594	DEBUG	findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2022-02-10 06:52:50,594	DEBUG	findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-02-10 06:52:50,594	DEBUG	findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:50,594	DEBUG	findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,610	DEBUG	findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:50,641	DEBUG	findfont: score(<Font 'Segoe Condensed' (segoeb.ttf) normal normal 700 condensed>) = 10.535
2022-02-10 06:52:50,641	DEBUG	findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,641	DEBUG	findfont: score(<Font 'SAPDings' (sapdn.ttf) normal normal normal normal>) = 10.0
2022-02-10 06:52:50,656	DEBUG	findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,656	DEBUG	findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,656	DEBUG	findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:50,656	DEBUG	findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:50,672	DEBUG	findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,672	DEBUG	findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,672	DEBUG	findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2022-02-10 06:52:50,689	DEBUG	findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,694	DEBUG	findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:50,694	DEBUG	findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,710	DEBUG	findfont: score(<Font '72' (72-Black.ttf) normal normal black normal>) = 10.525
2022-02-10 06:52:50,710	DEBUG	findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,710	DEBUG	findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:50,726	DEBUG	findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,726	DEBUG	findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
2022-02-10 06:52:50,726	DEBUG	findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,741	DEBUG	findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2022-02-10 06:52:50,741	DEBUG	findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-02-10 06:52:50,741	DEBUG	findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:50,741	DEBUG	findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2022-02-10 06:52:50,757	DEBUG	findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2022-02-10 06:52:50,757	DEBUG	findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:50,757	DEBUG	findfont: score(<Font 'SAPGUI-Belize-Icons' (SAPGUI-Belize-Icons.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,757	DEBUG	findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2022-02-10 06:52:50,757	DEBUG	findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,772	DEBUG	findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,772	DEBUG	findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,772	DEBUG	findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,772	DEBUG	findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,772	DEBUG	findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,772	DEBUG	findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:50,788	DEBUG	findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
2022-02-10 06:52:50,788	DEBUG	findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,794	DEBUG	findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,794	DEBUG	findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,794	DEBUG	findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2022-02-10 06:52:50,794	DEBUG	findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,794	DEBUG	findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-02-10 06:52:50,794	DEBUG	findfont: score(<Font '72' (72-Condensed.ttf) normal normal 400 condensed>) = 10.25
2022-02-10 06:52:50,810	DEBUG	findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,810	DEBUG	findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,810	DEBUG	findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,810	DEBUG	findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2022-02-10 06:52:50,810	DEBUG	findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,844	DEBUG	findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,860	DEBUG	findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,875	DEBUG	findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:50,875	DEBUG	findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2022-02-10 06:52:50,875	DEBUG	findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2022-02-10 06:52:50,891	DEBUG	findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:50,894	DEBUG	findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,894	DEBUG	findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-02-10 06:52:50,894	DEBUG	findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,894	DEBUG	findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,894	DEBUG	findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,910	DEBUG	findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:50,910	DEBUG	findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-02-10 06:52:50,926	DEBUG	findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,926	DEBUG	findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,926	DEBUG	findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2022-02-10 06:52:50,926	DEBUG	findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,926	DEBUG	findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,926	DEBUG	findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,941	DEBUG	findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,941	DEBUG	findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2022-02-10 06:52:50,941	DEBUG	findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,941	DEBUG	findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,941	DEBUG	findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2022-02-10 06:52:50,957	DEBUG	findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-02-10 06:52:50,957	DEBUG	findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,957	DEBUG	findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2022-02-10 06:52:50,957	DEBUG	findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2022-02-10 06:52:50,957	DEBUG	findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:50,957	DEBUG	findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,973	DEBUG	findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,974	DEBUG	findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,974	DEBUG	findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:50,974	DEBUG	findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:50,974	DEBUG	findfont: score(<Font '72' (72-Light.ttf) normal normal light normal>) = 10.24
2022-02-10 06:52:50,974	DEBUG	findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2022-02-10 06:52:50,974	DEBUG	findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2022-02-10 06:52:50,974	DEBUG	findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,990	DEBUG	findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,990	DEBUG	findfont: score(<Font 'SAPDings' (sapdn.ttf) normal normal normal normal>) = 10.0
2022-02-10 06:52:50,994	DEBUG	findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,994	DEBUG	findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-02-10 06:52:50,994	DEBUG	findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:50,994	DEBUG	findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,994	DEBUG	findfont: score(<Font '72' (72-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:50,994	DEBUG	findfont: score(<Font '72' (72-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,010	DEBUG	findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2022-02-10 06:52:51,010	DEBUG	findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2022-02-10 06:52:51,010	DEBUG	findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,010	DEBUG	findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2022-02-10 06:52:51,026	DEBUG	findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,026	DEBUG	findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,026	DEBUG	findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,026	DEBUG	findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2022-02-10 06:52:51,026	DEBUG	findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,026	DEBUG	findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,042	DEBUG	findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,043	DEBUG	findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,043	DEBUG	findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,043	DEBUG	findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,043	DEBUG	findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,043	DEBUG	findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,059	DEBUG	findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2022-02-10 06:52:51,059	DEBUG	findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,059	DEBUG	findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,059	DEBUG	findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,059	DEBUG	findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,059	DEBUG	findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,074	DEBUG	findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,074	DEBUG	findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,074	DEBUG	findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,074	DEBUG	findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2022-02-10 06:52:51,074	DEBUG	findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,074	DEBUG	findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,090	DEBUG	findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,095	DEBUG	findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,095	DEBUG	findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2022-02-10 06:52:51,095	DEBUG	findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2022-02-10 06:52:51,095	DEBUG	findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,095	DEBUG	findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,111	DEBUG	findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2022-02-10 06:52:51,111	DEBUG	findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,111	DEBUG	findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,111	DEBUG	findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,111	DEBUG	findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,126	DEBUG	findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,128	DEBUG	findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2022-02-10 06:52:51,128	DEBUG	findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2022-02-10 06:52:51,128	DEBUG	findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,128	DEBUG	findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2022-02-10 06:52:51,128	DEBUG	findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2022-02-10 06:52:51,144	DEBUG	findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,144	DEBUG	findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,144	DEBUG	findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,144	DEBUG	findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,144	DEBUG	findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,144	DEBUG	findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2022-02-10 06:52:51,144	DEBUG	findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-02-10 06:52:51,160	DEBUG	findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,160	DEBUG	findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,160	DEBUG	findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,160	DEBUG	findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,160	DEBUG	findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2022-02-10 06:52:51,160	DEBUG	findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,175	DEBUG	findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,175	DEBUG	findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,175	DEBUG	findfont: score(<Font 'Segoe Condensed' (segoeb.ttf) normal normal 700 condensed>) = 10.535
2022-02-10 06:52:51,175	DEBUG	findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,175	DEBUG	findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2022-02-10 06:52:51,175	DEBUG	findfont: score(<Font '72' (72-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,191	DEBUG	findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,191	DEBUG	findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,195	DEBUG	findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,195	DEBUG	findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,195	DEBUG	findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,195	DEBUG	findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-02-10 06:52:51,195	DEBUG	findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,211	DEBUG	findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,211	DEBUG	findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2022-02-10 06:52:51,211	DEBUG	findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,211	DEBUG	findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2022-02-10 06:52:51,211	DEBUG	findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,226	DEBUG	findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,226	DEBUG	findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,226	DEBUG	findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,226	DEBUG	findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,226	DEBUG	findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-02-10 06:52:51,226	DEBUG	findfont: score(<Font '72' (72-Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,242	DEBUG	findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2022-02-10 06:52:51,242	DEBUG	findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,242	DEBUG	findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,242	DEBUG	findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,242	DEBUG	findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,257	DEBUG	findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2022-02-10 06:52:51,257	DEBUG	findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,257	DEBUG	findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2022-02-10 06:52:51,257	DEBUG	findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,257	DEBUG	findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,273	DEBUG	findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2022-02-10 06:52:51,273	DEBUG	findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,273	DEBUG	findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,273	DEBUG	findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,273	DEBUG	findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,289	DEBUG	findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,289	DEBUG	findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,289	DEBUG	findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,295	DEBUG	findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2022-02-10 06:52:51,295	DEBUG	findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,295	DEBUG	findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,295	DEBUG	findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,295	DEBUG	findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2022-02-10 06:52:51,311	DEBUG	findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,311	DEBUG	findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,311	DEBUG	findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2022-02-10 06:52:51,311	DEBUG	findfont: score(<Font 'SAPGUI-Icons' (SAPGUI-icons.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,326	DEBUG	findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,326	DEBUG	findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,326	DEBUG	findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,326	DEBUG	findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,326	DEBUG	findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,342	DEBUG	findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,342	DEBUG	findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,342	DEBUG	findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2022-02-10 06:52:51,342	DEBUG	findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,342	DEBUG	findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,342	DEBUG	findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2022-02-10 06:52:51,358	DEBUG	findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,358	DEBUG	findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,358	DEBUG	findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,358	DEBUG	findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,358	DEBUG	findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,373	DEBUG	findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,373	DEBUG	findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2022-02-10 06:52:51,373	DEBUG	findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,373	DEBUG	findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-02-10 06:52:51,373	DEBUG	findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,373	DEBUG	findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2022-02-10 06:52:51,373	DEBUG	findfont: score(<Font 'SAPIcons' (sapin.ttf) normal normal normal normal>) = 10.0
2022-02-10 06:52:51,389	DEBUG	findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,389	DEBUG	findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2022-02-10 06:52:51,389	DEBUG	findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2022-02-10 06:52:51,395	DEBUG	findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,395	DEBUG	findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,395	DEBUG	findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,395	DEBUG	findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,395	DEBUG	findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2022-02-10 06:52:51,395	DEBUG	findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,395	DEBUG	findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,411	DEBUG	findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,411	DEBUG	findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,411	DEBUG	findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,411	DEBUG	findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2022-02-10 06:52:51,411	DEBUG	findfont: score(<Font 'Segoe Condensed' (segoe.ttf) normal normal 400 condensed>) = 10.25
2022-02-10 06:52:51,411	DEBUG	findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,427	DEBUG	findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,427	DEBUG	findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,427	DEBUG	findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,427	DEBUG	findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2022-02-10 06:52:51,427	DEBUG	findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,443	DEBUG	findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,443	DEBUG	findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,443	DEBUG	findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,443	DEBUG	findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,443	DEBUG	findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2022-02-10 06:52:51,443	DEBUG	findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,458	DEBUG	findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2022-02-10 06:52:51,458	DEBUG	findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,458	DEBUG	findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2022-02-10 06:52:51,458	DEBUG	findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2022-02-10 06:52:51,458	DEBUG	findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,458	DEBUG	findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,474	DEBUG	findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,474	DEBUG	findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2022-02-10 06:52:51,474	DEBUG	findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,474	DEBUG	findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-02-10 06:52:51,474	DEBUG	findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,474	DEBUG	findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,489	DEBUG	findfont: score(<Font 'SAPGUI-Belize-Icons' (SAPGUI-Belize-Icons.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,489	DEBUG	findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2022-02-10 06:52:51,496	DEBUG	findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,496	DEBUG	findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,496	DEBUG	findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2022-02-10 06:52:51,496	DEBUG	findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-02-10 06:52:51,496	DEBUG	findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,496	DEBUG	findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,513	DEBUG	findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,513	DEBUG	findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-02-10 06:52:51,513	DEBUG	findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2022-02-10 06:52:51,513	DEBUG	findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,513	DEBUG	findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,528	DEBUG	findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,528	DEBUG	findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2022-02-10 06:52:51,528	DEBUG	findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,528	DEBUG	findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2022-02-10 06:52:51,528	DEBUG	findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2022-02-10 06:52:51,528	DEBUG	findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,544	DEBUG	findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,544	DEBUG	findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,544	DEBUG	findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,544	DEBUG	findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,559	DEBUG	findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-02-10 06:52:51,559	DEBUG	findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,559	DEBUG	findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,559	DEBUG	findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,591	DEBUG	findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2022-02-10 06:52:51,611	DEBUG	findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2022-02-10 06:52:51,611	DEBUG	findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,611	DEBUG	findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,627	DEBUG	findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-02-10 06:52:51,627	DEBUG	findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,627	DEBUG	findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,627	DEBUG	findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,627	DEBUG	findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,627	DEBUG	findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,643	DEBUG	findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,658	DEBUG	findfont: score(<Font 'Segoe Condensed' (segoe.ttf) normal normal 400 condensed>) = 10.25
2022-02-10 06:52:51,658	DEBUG	findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,658	DEBUG	findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,658	DEBUG	findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,658	DEBUG	findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,658	DEBUG	findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2022-02-10 06:52:51,674	DEBUG	findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,674	DEBUG	findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2022-02-10 06:52:51,674	DEBUG	findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,674	DEBUG	findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-02-10 06:52:51,674	DEBUG	findfont: score(<Font 'SAPIcons' (sapin.ttf) normal normal normal normal>) = 10.0
2022-02-10 06:52:51,674	DEBUG	findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,690	DEBUG	findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,690	DEBUG	findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,696	DEBUG	findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2022-02-10 06:52:51,696	DEBUG	findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,696	DEBUG	findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,696	DEBUG	findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2022-02-10 06:52:51,696	DEBUG	findfont: score(<Font '72' (72-Bold.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,696	DEBUG	findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,712	DEBUG	findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,715	DEBUG	findfont: score(<Font '72' (72-Condensed.ttf) normal normal 400 condensed>) = 10.25
2022-02-10 06:52:51,718	DEBUG	findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2022-02-10 06:52:51,718	DEBUG	findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,718	DEBUG	findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,718	DEBUG	findfont: score(<Font '72' (72-Regular.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,718	DEBUG	findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,718	DEBUG	findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,734	DEBUG	findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,734	DEBUG	findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,734	DEBUG	findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,734	DEBUG	findfont: score(<Font '72' (72-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,734	DEBUG	findfont: score(<Font '72' (72-Italic.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,734	DEBUG	findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2022-02-10 06:52:51,749	DEBUG	findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,749	DEBUG	findfont: score(<Font 'SAPGUI-Icons' (SAPGUI-icons.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,749	DEBUG	findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,749	DEBUG	findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,749	DEBUG	findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,749	DEBUG	findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,765	DEBUG	findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2022-02-10 06:52:51,765	DEBUG	findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,765	DEBUG	findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,765	DEBUG	findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2022-02-10 06:52:51,765	DEBUG	findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2022-02-10 06:52:51,765	DEBUG	findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,765	DEBUG	findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,781	DEBUG	findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,781	DEBUG	findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,781	DEBUG	findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,781	DEBUG	findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,781	DEBUG	findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,781	DEBUG	findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,796	DEBUG	findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,796	DEBUG	findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,796	DEBUG	findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2022-02-10 06:52:51,796	DEBUG	findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,796	DEBUG	findfont: score(<Font '72' (72-CondensedBold.ttf) normal normal 700 condensed>) = 10.535
2022-02-10 06:52:51,796	DEBUG	findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,796	DEBUG	findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,811	DEBUG	findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2022-02-10 06:52:51,811	DEBUG	findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2022-02-10 06:52:51,811	DEBUG	findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,811	DEBUG	findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,811	DEBUG	findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,811	DEBUG	findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,811	DEBUG	findfont: score(<Font '72' (72-Light.ttf) normal normal light normal>) = 10.24
2022-02-10 06:52:51,827	DEBUG	findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,827	DEBUG	findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,827	DEBUG	findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,827	DEBUG	findfont: score(<Font '72' (72-Black.ttf) normal normal black normal>) = 10.525
2022-02-10 06:52:51,827	DEBUG	findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-02-10 06:52:51,827	DEBUG	findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,827	DEBUG	findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,843	DEBUG	findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 700 normal>) = 11.335
2022-02-10 06:52:51,843	DEBUG	findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-02-10 06:52:51,843	DEBUG	findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2022-02-10 06:52:51,843	DEBUG	findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,843	DEBUG	findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,858	DEBUG	findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2022-02-10 06:52:51,858	DEBUG	findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-02-10 06:52:51,858	DEBUG	findfont: score(<Font '72' (72-CondensedBold.ttf) normal normal 700 condensed>) = 10.535
2022-02-10 06:52:51,858	DEBUG	findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2022-02-10 06:52:51,858	DEBUG	findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,858	DEBUG	findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-02-10 06:52:51,874	DEBUG	findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\jmoon\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2022-02-10 08:33:12,403	CRITICAL	Logging Started, level=10
2022-02-10 08:33:12,403	DEBUG	DataLogger[0x000002E7D5B65FA0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 08:33:45,396	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 08:33:45,518	DEBUG	Get data (whatever we have)
2022-02-10 08:44:16,478	CRITICAL	Logging Started, level=10
2022-02-10 08:44:16,478	DEBUG	DataLogger[0x00000239BB1ABFA0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 08:44:26,053	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 08:44:26,153	DEBUG	Get data (whatever we have)
2022-02-10 08:45:37,066	DEBUG	DataReader Skipping non-existent file datac\2022\2\8\wind_vmph.dat
2022-02-10 08:45:37,097	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 08:45:37,197	DEBUG	Get data (whatever we have)
2022-02-10 09:25:05,253	CRITICAL	Logging Started, level=10
2022-02-10 09:25:05,258	DEBUG	DataLogger[0x0000017FE97B5A90](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 09:26:17,149	CRITICAL	Logging Started, level=10
2022-02-10 09:26:17,149	DEBUG	DataLogger[0x000002493EB1BFA0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 09:26:19,998	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 09:26:20,129	DEBUG	Get data (whatever we have)
2022-02-10 09:26:59,514	CRITICAL	Logging Started, level=10
2022-02-10 09:26:59,522	DEBUG	DataLogger[0x000001D9A3FBA6D0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 09:27:03,913	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 09:27:04,015	DEBUG	Get data (whatever we have)
2022-02-10 09:27:58,508	CRITICAL	Logging Started, level=10
2022-02-10 09:27:58,524	DEBUG	DataLogger[0x000001549894C6A0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 09:28:01,842	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 09:28:01,979	DEBUG	Get data (whatever we have)
2022-02-10 10:16:34,045	CRITICAL	Logging Started, level=10
2022-02-10 10:16:34,049	DEBUG	DataLogger[0x0000014E1BFBBFA0](DN=False,EC=1,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 10:17:36,565	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 10:17:36,692	DEBUG	Get data (whatever we have)
2022-02-10 10:33:26,468	CRITICAL	Logging Started, level=10
2022-02-10 10:33:26,468	DEBUG	DataLogger[0x00000262D557A700](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 10:34:55,090	CRITICAL	Logging Started, level=10
2022-02-10 10:34:55,106	DEBUG	DataLogger[0x000001716EBEA6A0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 10:35:06,311	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 10:35:06,378	DEBUG	Get data (whatever we have)
2022-02-10 10:41:26,360	CRITICAL	Logging Started, level=10
2022-02-10 10:41:26,360	DEBUG	DataLogger[0x00000239B5046D00](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 10:43:04,592	CRITICAL	Logging Started, level=10
2022-02-10 10:43:04,608	DEBUG	DataLogger[0x0000028B894D8D00](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 10:43:04,608	INFO	Dash is running on http://127.0.0.1:8050/

2022-02-10 10:43:08,652	CRITICAL	Logging Started, level=10
2022-02-10 10:43:08,652	DEBUG	DataLogger[0x000001DAF8106CD0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 10:44:36,744	CRITICAL	Logging Started, level=10
2022-02-10 10:44:36,751	DEBUG	DataLogger[0x0000022EB1808D00](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 10:44:36,751	INFO	Dash is running on http://127.0.0.1:8050/

2022-02-10 10:44:40,437	CRITICAL	Logging Started, level=10
2022-02-10 10:44:40,437	DEBUG	DataLogger[0x00000223F99D6CD0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 10:52:08,725	CRITICAL	Logging Started, level=10
2022-02-10 10:52:08,725	DEBUG	DataLogger[0x0000026902616CD0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 10:52:10,014	DEBUG	Will try file datac with origin None
2022-02-10 10:53:55,701	CRITICAL	Logging Started, level=10
2022-02-10 10:53:55,701	DEBUG	DataLogger[0x0000019159246CD0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 10:53:57,590	DEBUG	Will try file datac with origin None
2022-02-10 10:56:18,951	CRITICAL	Logging Started, level=10
2022-02-10 10:56:18,951	DEBUG	DataLogger[0x000002C427D26CD0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 10:56:20,454	DEBUG	Get Data: origin is none
2022-02-10 11:03:48,437	CRITICAL	Logging Started, level=10
2022-02-10 11:03:48,437	DEBUG	DataLogger[0x000001616AC18CD0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 11:04:57,210	CRITICAL	Logging Started, level=10
2022-02-10 11:04:57,210	DEBUG	DataLogger[0x000001E1CA9B8D00](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 11:04:57,225	INFO	Dash is running on http://127.0.0.1:8050/

2022-02-10 11:05:00,971	CRITICAL	Logging Started, level=10
2022-02-10 11:05:00,987	DEBUG	DataLogger[0x0000024E4FA36CD0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 11:06:06,038	CRITICAL	Logging Started, level=10
2022-02-10 11:06:06,038	DEBUG	DataLogger[0x000002155AA88CD0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 11:06:15,250	DEBUG	Will try file datac with origin wind_vmph
2022-02-10 11:06:15,284	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 11:06:15,319	DEBUG	Get data (whatever we have)
2022-02-10 11:06:21,300	DEBUG	Will try file datac with origin wind_vmph
2022-02-10 11:06:21,332	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 11:06:21,376	DEBUG	Get data (whatever we have)
2022-02-10 11:06:21,475	DEBUG	Will try file datac with origin wind_angle
2022-02-10 11:06:21,491	DEBUG	DataReader Read datac\2022\2\9\wind_angle.dat
2022-02-10 11:06:21,654	DEBUG	Get data (whatever we have)
2022-02-10 11:06:33,825	DEBUG	Will try file datac with origin wind_vmph
2022-02-10 11:06:33,841	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 11:06:33,941	DEBUG	Get data (whatever we have)
2022-02-10 11:06:46,943	DEBUG	Will try file datac with origin wind_vmph
2022-02-10 11:06:46,959	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 11:06:47,059	DEBUG	Get data (whatever we have)
2022-02-10 11:06:53,997	DEBUG	Will try file datac with origin wind_vmph
2022-02-10 11:06:54,013	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 11:06:54,047	DEBUG	Get data (whatever we have)
2022-02-10 11:13:15,249	DEBUG	Will try file datac with origin wind_vmph
2022-02-10 11:13:15,265	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 11:13:15,380	DEBUG	Get data (whatever we have)
2022-02-10 11:13:17,921	DEBUG	Will try file datac with origin wind_vmph
2022-02-10 11:13:17,939	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 11:13:18,026	DEBUG	Get data (whatever we have)
2022-02-10 11:13:22,087	DEBUG	Will try file datac with origin wind_vmph
2022-02-10 11:13:22,101	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 11:13:22,170	DEBUG	Get data (whatever we have)
2022-02-10 11:13:26,487	DEBUG	Will try file datac with origin wind_angle
2022-02-10 11:13:26,511	DEBUG	DataReader Read datac\2022\2\9\wind_angle.dat
2022-02-10 11:13:26,626	DEBUG	Get data (whatever we have)
2022-02-10 11:14:47,098	DEBUG	Will try file datac with origin wind_angle
2022-02-10 11:14:47,115	DEBUG	DataReader Read datac\2022\2\9\wind_angle.dat
2022-02-10 11:14:47,264	DEBUG	Get data (whatever we have)
2022-02-10 11:17:02,689	DEBUG	Will try file datac with origin wind_angle
2022-02-10 11:17:02,709	DEBUG	DataReader Read datac\2022\2\9\wind_angle.dat
2022-02-10 11:17:02,801	DEBUG	Get data (whatever we have)
2022-02-10 11:17:02,922	DEBUG	Will try file datac with origin wind_vmph
2022-02-10 11:17:02,938	DEBUG	DataReader Read datac\2022\2\9\wind_vmph.dat
2022-02-10 11:17:03,071	DEBUG	Get data (whatever we have)
2022-02-10 12:11:08,191	CRITICAL	Logging Started, level=10
2022-02-10 12:11:08,191	DEBUG	DataLogger[0x00000200153D6CD0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 13:28:13,450	CRITICAL	Logging Started, level=10
2022-02-10 13:28:13,456	DEBUG	DataLogger[0x00000209DF976D00](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 13:28:13,463	INFO	Dash is running on http://127.0.0.1:8050/

2022-02-10 13:28:19,357	CRITICAL	Logging Started, level=10
2022-02-10 13:28:19,361	DEBUG	DataLogger[0x0000022DE5C46CD0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 13:34:50,844	CRITICAL	Logging Started, level=10
2022-02-10 13:34:50,848	DEBUG	DataLogger[0x0000021770AA6D00](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 13:34:50,855	INFO	Dash is running on http://127.0.0.1:8050/

2022-02-10 13:34:57,751	CRITICAL	Logging Started, level=10
2022-02-10 13:34:57,754	DEBUG	DataLogger[0x000001BEA2716CD0](DN=False,EC=0,TO=5,BK=False,LC=-1,LI=1) Generic Enter
2022-02-10 13:35:27,082	DEBUG	Writing 1 data pairs to datac\2022\2\10\wind_angle.dat
2022-02-10 13:35:45,376	DEBUG	Writing 1 data pairs to datac\2022\2\10\wind_angle.dat
2022-02-10 13:35:47,459	DEBUG	Writing 1 data pairs to datac\2022\2\10\wind_angle.dat
